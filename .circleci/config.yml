version: 2.1
orbs:
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-s3: circleci/aws-s3@3.1.1
jobs:
  build:
    docker:
      - image: "cimg/node:14.15"
    steps:
      - node/install:
          node-version: '14.15'
      - checkout
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: API Build
          command: |
            npm run api:build
      - persist_to_workspace:
          root: ~/project
          paths:
            - udagram
  deploy-frontend:
    docker:
      - image: cimg/base:stable
    steps:
      - node/install:
          node-version: '14.15'
      - checkout
      - attach_workspace:
          at: ~/project
      - aws-s3/copy:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_DEFAULT_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: udagram/udagram-frontend/www/
          to: s3://project4-demo
          arguments: --recursive
  deploy-api:
    docker:
      - image: cimg/base:stable
    steps:
      - node/install:
          node-version: '14.15'
      - checkout
      - attach_workspace:
          at: ~/project
      - eb/setup
      - run:
          name: Create environment
          command: cd D:\Udacity\Project 4\udacity-project4\udagram\udagram-api eb create udagram-api-dev
      - run:
          name: Deploy
          command: npm run api:deploy
workflows:
  udagram:
    jobs:
      - build
      - hold-frontend:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - hold-api:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy-frontend:
          requires:
            - hold-frontend
      - deploy-api:
          requires:
            - hold-api